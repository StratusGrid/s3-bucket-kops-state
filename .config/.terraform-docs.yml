header-from: ./.config/header.md

version: ""

formatter: markdown table

name: terraform-aws-s3-bucket-kops-state

content: |-
  {{ .Header }}

  # terraform-aws-s3-bucket-kops-state

  GitHub: [StratusGrid/terraform-aws-s3-bucket-kops-state](https://github.com/StratusGrid/terraform-aws-s3-bucket-kops-state)

  This module creates a Bucket and related policy to be used as a logging bucket.
  
  It configures a bucket with:
   - SSE-S3 unless SSE-KMS is specified (KMS will incur an additional charge) 
   - Requires encrypted transit
   - Optional cross account trust for using this state bucket in a centralized account with other accounts storing/retrieving state from it.
     - When using cross account permissions, you will usually want to force 'bucket-owner-full-control' ACL on all objects (otherwise the bucket owner may not be able to see them). This can be done by running this command before running kops: 
  ```
  export KOPS_STATE_S3_ACL=bucket-owner-full-control
  ``` 
  - Optional cross account read only option for using this state bucket in a centralized account with other accounts only retrieving state from it.
    - If you wanted to have different customers/security levels share the bucket, you would need to restructure the cross account trusting policies to map accounts to specific keys for different clusters or similar, and even then I would NOT recommend doing this (since they could still list the bucket and see names of the other clusters, even if they couldn't access them).
    - The read only option assumes you are using separate access credentials for S3 than you are using for infrastructure provisioning. See this thread for more details: https://github.com/kubernetes/kops/issues/353#issuecomment-446837838
 
  ## Example Usage:

  ```hcl
  {{ include "examples/example1.tfnot" }}
  ```
  ---

  {{ .Requirements }}

  {{ .Resources }}

  {{ .Inputs }}

  {{ .Outputs }}

  ---

  <span style="color:red">Note:</span> Manual changes to the README will be overwritten when the documentation is updated. To update the documentation, run `terraform-docs -c .config/.terraform-docs.yml .`

sections:
  show:
    - header
    - resources
    - inputs
    - outputs
    - providers
    - requirements

sort:
  enabled: true
  by: name

output:
  file: README.md
  mode: replace
